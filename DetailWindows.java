/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package famtupredict;



import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.print.PageFormat;
import java.awt.print.Printable;
import java.awt.print.PrinterException;
import java.awt.print.PrinterJob;
import java.util.ArrayList;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.xml.crypto.Data;
import professionaleventforcaster.Cdestiny;
import professionaleventforcaster.Csoul;
import professionaleventforcaster.Current.AboutUs;
import professionaleventforcaster.Numerology;





/**
 *
 * @author Mr. Mohammed
 */
public class DetailWindows extends javax.swing.JFrame {
public static int Maleday=0, Femaleday =0, month=0, year=0, sum=0 , result=0, Destiny,destinyNumber, Soul,soulNumber, Personal,personalNumber;
    String filename;
    Child_Event CharactersOnly = new Child_Event();
    
    public String NumerologyReport;
    public String MarriageCompactible;
    public String Love;
    public String YearlyReport;
    public String MonthlyReport;


    static int resulfullbirDestinyName, resulfullbirPersonalName, sumfullBirthSoul;

    static int resulmotherDestinyName, resulmotherPersonalName, sumMotherSoul;

    static int resulcurrentDestinyName, resulcurrentPersonalName, sumCurrentSoul;

    static int sumDay, sumMonth, sumYear, dBirthPath, lifepath,
            remd, remy, rem, remY;
    public ArrayList<Data> NumerologyArray;
    public javax.swing.JTextPane txtNumerologyReportPane, txtMariageReportPane, txtLovelyReportPane, txtyearlyReporPane, txtmonthlyReportpane;

    /**
     * /**
     * Creates new form DetailWindows
     */
    public DetailWindows() {
        initComponents();
    }
public DetailWindows(String numerologyReport,String marriageCompactible,String love,String yearlyReport,String monthlyReport) {
    this.NumerologyReport =numerologyReport;
    this.MarriageCompactible=marriageCompactible;
    this.Love =love;
    this.YearlyReport =yearlyReport;
    this.MonthlyReport =monthlyReport;
            
        initComponents();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton7 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtMothersName = new javax.swing.JTextField();
        txtCurrentName = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        cmbDayDate = new javax.swing.JComboBox();
        cmbMonthDate = new javax.swing.JComboBox();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        txtCurrentName1 = new javax.swing.JTextField();
        txtMothersName1 = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        cmbDayDate1 = new javax.swing.JComboBox();
        cmbMonthDate1 = new javax.swing.JComboBox();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jSeparator4 = new javax.swing.JSeparator();
        jSeparator5 = new javax.swing.JSeparator();
        jSeparator6 = new javax.swing.JSeparator();
        jSeparator7 = new javax.swing.JSeparator();
        jSeparator8 = new javax.swing.JSeparator();
        jYearChooser1 = new com.toedter.calendar.JYearChooser();
        jYearChooser2 = new com.toedter.calendar.JYearChooser();
        jPanel4 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtReportArea = new javax.swing.JTextArea();
        jSeparator2 = new javax.swing.JSeparator();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jCheckBoxMenuItem2 = new javax.swing.JCheckBoxMenuItem();
        jCheckBoxMenuItem7 = new javax.swing.JCheckBoxMenuItem();
        jCheckBoxMenuItem4 = new javax.swing.JCheckBoxMenuItem();
        jCheckBoxMenuItem5 = new javax.swing.JCheckBoxMenuItem();
        jCheckBoxMenuItem6 = new javax.swing.JCheckBoxMenuItem();
        jCheckBoxMenuItem8 = new javax.swing.JCheckBoxMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jCheckBoxMenuItem10 = new javax.swing.JCheckBoxMenuItem();
        jCheckBoxMenuItem11 = new javax.swing.JCheckBoxMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBackground(new java.awt.Color(204, 204, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED), "Numerology Marriage Compatibility", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.ABOVE_TOP, new java.awt.Font("Sitka Heading", 0, 36))); // NOI18N

        jButton7.setBackground(new java.awt.Color(204, 204, 204));
        jButton7.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jButton7.setText("Back");
        jButton7.setBorder(null);
        jButton7.setBorderPainted(false);
        jButton7.setContentAreaFilled(false);
        jButton7.setFocusPainted(false);
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 867, Short.MAX_VALUE)
                .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 10, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jPanel3.setBackground(new java.awt.Color(204, 204, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED), "Marriage Compatibility ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 1, 18))); // NOI18N

        jLabel2.setBackground(new java.awt.Color(204, 204, 255));
        jLabel2.setFont(new java.awt.Font("Sitka Small", 0, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(51, 51, 51));
        jLabel2.setText("Mother's Name :");

        txtMothersName.setBackground(new java.awt.Color(204, 204, 255));
        txtMothersName.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        txtMothersName.setForeground(new java.awt.Color(51, 51, 51));
        txtMothersName.setBorder(null);
        txtMothersName.setOpaque(false);
        txtMothersName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtMothersNameKeyTyped(evt);
            }
        });

        txtCurrentName.setBackground(new java.awt.Color(204, 204, 255));
        txtCurrentName.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        txtCurrentName.setForeground(new java.awt.Color(51, 51, 51));
        txtCurrentName.setBorder(null);
        txtCurrentName.setOpaque(false);
        txtCurrentName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCurrentNameActionPerformed(evt);
            }
        });
        txtCurrentName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCurrentNameKeyTyped(evt);
            }
        });

        jLabel3.setBackground(new java.awt.Color(204, 204, 255));
        jLabel3.setFont(new java.awt.Font("Sitka Small", 0, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(51, 51, 51));
        jLabel3.setText("Only Birth Full Name:");

        jLabel4.setBackground(new java.awt.Color(204, 204, 255));
        jLabel4.setFont(new java.awt.Font("Sitka Small", 0, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(51, 51, 51));
        jLabel4.setText("Date Of Birth :");

        jLabel6.setBackground(new java.awt.Color(204, 204, 255));
        jLabel6.setText("Day");

        jLabel7.setText("Month");

        jLabel8.setBackground(new java.awt.Color(204, 204, 255));
        jLabel8.setText("Year");

        cmbDayDate.setBackground(new java.awt.Color(204, 204, 255));
        cmbDayDate.setMaximumRowCount(10);
        cmbDayDate.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));

        cmbMonthDate.setBackground(new java.awt.Color(204, 204, 255));
        cmbMonthDate.setMaximumRowCount(34);
        cmbMonthDate.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", " " }));
        cmbMonthDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbMonthDateActionPerformed(evt);
            }
        });

        jLabel9.setBackground(new java.awt.Color(204, 204, 255));
        jLabel9.setFont(new java.awt.Font("Sitka Small", 0, 12)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(51, 51, 51));
        jLabel9.setText("Current Full Name:");

        jLabel10.setBackground(new java.awt.Color(204, 204, 255));
        jLabel10.setFont(new java.awt.Font("Sitka Small", 0, 12)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(51, 51, 51));
        jLabel10.setText("Mother's Name :");

        jLabel11.setBackground(new java.awt.Color(204, 204, 255));
        jLabel11.setFont(new java.awt.Font("Sitka Small", 0, 12)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(51, 51, 51));
        jLabel11.setText("Date Of Birth :");

        txtCurrentName1.setBackground(new java.awt.Color(204, 204, 255));
        txtCurrentName1.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        txtCurrentName1.setForeground(new java.awt.Color(51, 51, 51));
        txtCurrentName1.setBorder(null);
        txtCurrentName1.setOpaque(false);
        txtCurrentName1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCurrentName1KeyTyped(evt);
            }
        });

        txtMothersName1.setBackground(new java.awt.Color(204, 204, 255));
        txtMothersName1.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        txtMothersName1.setForeground(new java.awt.Color(51, 51, 51));
        txtMothersName1.setBorder(null);
        txtMothersName1.setOpaque(false);
        txtMothersName1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtMothersName1KeyTyped(evt);
            }
        });

        jLabel12.setBackground(new java.awt.Color(204, 204, 255));
        jLabel12.setText("Day");

        cmbDayDate1.setBackground(new java.awt.Color(204, 204, 255));
        cmbDayDate1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));

        cmbMonthDate1.setBackground(new java.awt.Color(204, 204, 255));
        cmbMonthDate1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", " " }));
        cmbMonthDate1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbMonthDate1ActionPerformed(evt);
            }
        });

        jLabel13.setBackground(new java.awt.Color(204, 204, 255));
        jLabel13.setText("Month");

        jLabel14.setBackground(new java.awt.Color(204, 204, 255));
        jLabel14.setText("Year");

        jLabel1.setBackground(new java.awt.Color(204, 204, 255));
        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel1.setText("Male");

        jLabel5.setBackground(new java.awt.Color(204, 204, 255));
        jLabel5.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel5.setText("Female");

        jSeparator4.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED)));

        jSeparator5.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED)));

        jSeparator6.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED)));

        jSeparator7.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED)));

        jSeparator8.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED)));

        jYearChooser1.setBackground(new java.awt.Color(204, 204, 255));
        jYearChooser1.setMinimum(10);

        jYearChooser2.setBackground(new java.awt.Color(204, 204, 255));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3))
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtCurrentName1, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(jPanel3Layout.createSequentialGroup()
                                                .addComponent(cmbDayDate1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(cmbMonthDate1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(jYearChooser2, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(jPanel3Layout.createSequentialGroup()
                                                .addGap(10, 10, 10)
                                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                                        .addComponent(jLabel6)
                                                        .addGap(57, 57, 57)
                                                        .addComponent(jLabel7)
                                                        .addGap(41, 41, 41)
                                                        .addComponent(jLabel8))
                                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                                        .addComponent(jLabel12)
                                                        .addGap(57, 57, 57)
                                                        .addComponent(jLabel13)
                                                        .addGap(41, 41, 41)
                                                        .addComponent(jLabel14))))
                                            .addComponent(jLabel1)
                                            .addGroup(jPanel3Layout.createSequentialGroup()
                                                .addComponent(cmbDayDate, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(cmbMonthDate, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(jYearChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                                        .addComponent(txtCurrentName, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtMothersName1, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtMothersName, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(141, 141, 141)
                        .addComponent(jLabel5)))
                .addGap(38, 38, 38))
            .addComponent(jSeparator4, javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(jSeparator5)
            .addComponent(jSeparator6, javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(jSeparator8, javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(jSeparator7)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCurrentName, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 1, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtMothersName, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(3, 3, 3)
                .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 1, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jYearChooser1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cmbMonthDate, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cmbDayDate, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jSeparator7, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addGap(23, 23, 23)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCurrentName1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(3, 3, 3)
                .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, 1, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtMothersName1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(3, 3, 3)
                .addComponent(jSeparator8, javax.swing.GroupLayout.PREFERRED_SIZE, 1, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(jLabel13)
                    .addComponent(jLabel14))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jYearChooser2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cmbMonthDate1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cmbDayDate1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setBackground(new java.awt.Color(204, 204, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED)));

        jButton2.setFont(new java.awt.Font("Vani", 1, 14)); // NOI18N
        jButton2.setForeground(new java.awt.Color(51, 51, 51));
        jButton2.setText("Clear");
        jButton2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton2.setContentAreaFilled(false);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Vani", 1, 14)); // NOI18N
        jButton3.setForeground(new java.awt.Color(51, 51, 51));
        jButton3.setText("Exit");
        jButton3.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton3.setContentAreaFilled(false);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton5.setFont(new java.awt.Font("Vani", 1, 14)); // NOI18N
        jButton5.setForeground(new java.awt.Color(51, 51, 51));
        jButton5.setText("Print");
        jButton5.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton5.setContentAreaFilled(false);
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setFont(new java.awt.Font("Vani", 1, 14)); // NOI18N
        jButton6.setForeground(new java.awt.Color(51, 51, 51));
        jButton6.setText("Display");
        jButton6.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton6.setContentAreaFilled(false);
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(72, 72, 72)
                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45)
                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(89, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(jButton2))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton6)
                    .addComponent(jButton5))
                .addGap(30, 30, 30))
        );

        jPanel5.setBackground(new java.awt.Color(204, 204, 255));
        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED)));

        txtReportArea.setColumns(15);
        txtReportArea.setFont(new java.awt.Font("Andalus", 0, 18)); // NOI18N
        txtReportArea.setLineWrap(true);
        txtReportArea.setRows(5);
        txtReportArea.setWrapStyleWord(true);
        jScrollPane2.setViewportView(txtReportArea);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 514, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 417, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(22, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 541, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jMenuBar1.setBackground(new java.awt.Color(255, 255, 255));
        jMenuBar1.setForeground(new java.awt.Color(102, 102, 102));
        jMenuBar1.setFont(new java.awt.Font("Shonar Bangla", 1, 18)); // NOI18N
        jMenuBar1.setPreferredSize(new java.awt.Dimension(56, 36));

        jMenu1.setForeground(new java.awt.Color(102, 102, 102));
        jMenu1.setText("File");
        jMenu1.setFont(new java.awt.Font("Segoe UI Emoji", 1, 14)); // NOI18N

        jCheckBoxMenuItem2.setBackground(new java.awt.Color(255, 255, 255));
        jCheckBoxMenuItem2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jCheckBoxMenuItem2.setForeground(new java.awt.Color(102, 102, 102));
        jCheckBoxMenuItem2.setText("Create New Report");
        jCheckBoxMenuItem2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.darkGray, java.awt.Color.white, java.awt.Color.white, java.awt.Color.darkGray));
        jCheckBoxMenuItem2.setMargin(new java.awt.Insets(1, 1, 1, 1));
        jCheckBoxMenuItem2.setMinimumSize(new java.awt.Dimension(1, 1));
        jCheckBoxMenuItem2.setPreferredSize(new java.awt.Dimension(209, 30));
        jCheckBoxMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jCheckBoxMenuItem2);

        jCheckBoxMenuItem7.setBackground(new java.awt.Color(255, 255, 255));
        jCheckBoxMenuItem7.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jCheckBoxMenuItem7.setForeground(new java.awt.Color(102, 102, 102));
        jCheckBoxMenuItem7.setText("Close");
        jCheckBoxMenuItem7.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.darkGray, java.awt.Color.white, java.awt.Color.white, java.awt.Color.darkGray));
        jCheckBoxMenuItem7.setMargin(new java.awt.Insets(1, 1, 1, 1));
        jCheckBoxMenuItem7.setMinimumSize(new java.awt.Dimension(1, 1));
        jCheckBoxMenuItem7.setPreferredSize(new java.awt.Dimension(209, 30));
        jCheckBoxMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxMenuItem7ActionPerformed(evt);
            }
        });
        jMenu1.add(jCheckBoxMenuItem7);

        jCheckBoxMenuItem4.setBackground(new java.awt.Color(255, 255, 255));
        jCheckBoxMenuItem4.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jCheckBoxMenuItem4.setForeground(new java.awt.Color(102, 102, 102));
        jCheckBoxMenuItem4.setText("Print");
        jCheckBoxMenuItem4.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.darkGray, java.awt.Color.white, java.awt.Color.white, java.awt.Color.darkGray));
        jCheckBoxMenuItem4.setMargin(new java.awt.Insets(1, 1, 1, 1));
        jCheckBoxMenuItem4.setMinimumSize(new java.awt.Dimension(1, 1));
        jCheckBoxMenuItem4.setPreferredSize(new java.awt.Dimension(209, 30));
        jCheckBoxMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxMenuItem4ActionPerformed(evt);
            }
        });
        jMenu1.add(jCheckBoxMenuItem4);

        jCheckBoxMenuItem5.setBackground(new java.awt.Color(255, 255, 255));
        jCheckBoxMenuItem5.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jCheckBoxMenuItem5.setForeground(new java.awt.Color(102, 102, 102));
        jCheckBoxMenuItem5.setText("Copy");
        jCheckBoxMenuItem5.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.darkGray, java.awt.Color.white, java.awt.Color.white, java.awt.Color.darkGray));
        jCheckBoxMenuItem5.setMargin(new java.awt.Insets(1, 1, 1, 1));
        jCheckBoxMenuItem5.setMinimumSize(new java.awt.Dimension(1, 1));
        jCheckBoxMenuItem5.setPreferredSize(new java.awt.Dimension(209, 30));
        jCheckBoxMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxMenuItem5ActionPerformed(evt);
            }
        });
        jMenu1.add(jCheckBoxMenuItem5);

        jCheckBoxMenuItem6.setBackground(new java.awt.Color(255, 255, 255));
        jCheckBoxMenuItem6.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jCheckBoxMenuItem6.setForeground(new java.awt.Color(102, 102, 102));
        jCheckBoxMenuItem6.setText("Select");
        jCheckBoxMenuItem6.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.darkGray, java.awt.Color.white, java.awt.Color.white, java.awt.Color.darkGray));
        jCheckBoxMenuItem6.setMargin(new java.awt.Insets(1, 1, 1, 1));
        jCheckBoxMenuItem6.setMinimumSize(new java.awt.Dimension(1, 1));
        jCheckBoxMenuItem6.setPreferredSize(new java.awt.Dimension(209, 30));
        jCheckBoxMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxMenuItem6ActionPerformed(evt);
            }
        });
        jMenu1.add(jCheckBoxMenuItem6);

        jCheckBoxMenuItem8.setBackground(new java.awt.Color(255, 255, 255));
        jCheckBoxMenuItem8.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jCheckBoxMenuItem8.setForeground(new java.awt.Color(102, 102, 102));
        jCheckBoxMenuItem8.setText("Exit");
        jCheckBoxMenuItem8.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.darkGray, java.awt.Color.white, java.awt.Color.white, java.awt.Color.darkGray));
        jCheckBoxMenuItem8.setMargin(new java.awt.Insets(1, 1, 1, 1));
        jCheckBoxMenuItem8.setMinimumSize(new java.awt.Dimension(1, 1));
        jCheckBoxMenuItem8.setPreferredSize(new java.awt.Dimension(209, 30));
        jCheckBoxMenuItem8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxMenuItem8ActionPerformed(evt);
            }
        });
        jMenu1.add(jCheckBoxMenuItem8);

        jMenuBar1.add(jMenu1);

        jMenu2.setForeground(new java.awt.Color(102, 102, 102));
        jMenu2.setText("Edit");
        jMenu2.setFont(new java.awt.Font("Segoe UI Emoji", 1, 14)); // NOI18N

        jCheckBoxMenuItem10.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jCheckBoxMenuItem10.setForeground(new java.awt.Color(102, 102, 102));
        jCheckBoxMenuItem10.setText("Print All");
        jCheckBoxMenuItem10.setPreferredSize(new java.awt.Dimension(179, 30));
        jCheckBoxMenuItem10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxMenuItem10ActionPerformed(evt);
            }
        });
        jMenu2.add(jCheckBoxMenuItem10);

        jCheckBoxMenuItem11.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jCheckBoxMenuItem11.setForeground(new java.awt.Color(102, 102, 102));
        jCheckBoxMenuItem11.setText(" Copy  All");
        jCheckBoxMenuItem11.setPreferredSize(new java.awt.Dimension(179, 30));
        jCheckBoxMenuItem11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxMenuItem11ActionPerformed(evt);
            }
        });
        jMenu2.add(jCheckBoxMenuItem11);

        jMenuBar1.add(jMenu2);

        jMenu3.setForeground(new java.awt.Color(102, 102, 102));
        jMenu3.setText("About Us");
        jMenu3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jMenu3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu3ActionPerformed(evt);
            }
        });

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem1.setText("Read Me");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem1);

        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // ================clear all field==============================
       
        txtMothersName.setText(" ");
        txtCurrentName.setText(" ");
        cmbDayDate.setSelectedItem(" ");
        cmbMonthDate.setSelectedItem(" ");
//        jYearChooser1.setYear(0);
        txtReportArea.setText(" ");
       
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        // ===============Exit===================:
Child_Event youExit = new Child_Event(); 
        try {
            youExit.iExitsystem();
        } catch (NumberFormatException e) {
            JOptionPane.showConfirmDialog(null, "Billing system error");
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        //================Print stuffss goes here==============
//        try {
//            // TODO add your handling code here:
//            txtReportArea.print();
//        } catch (PrinterException ex) {
//        }
         PrinterJob pj = PrinterJob.getPrinterJob();

        pj.setJobName(" Print Component ");
        pj.setPrintable (new Printable() {    
    @Override
    public int print(Graphics pg, PageFormat pf, int pageNum){
      if (pageNum > 0){
      return Printable.NO_SUCH_PAGE;
      }

      Graphics2D g2 = (Graphics2D) pg;
      g2.translate(pf.getImageableX(), pf.getImageableY());
      txtReportArea.paint(g2);
      return Printable.PAGE_EXISTS;
    }

        
  });
  if (pj.printDialog() == false)
  return;

  try {
        pj.print();
  } catch (PrinterException ex) {
        // handle exception
  }
    }//GEN-LAST:event_jButton5ActionPerformed
int daym=0,dayfm=0;
    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        txtReportArea.append("");
        Cdestiny cdk = new Cdestiny();
        Numerology k = new Numerology();
        Csoul csk = new Csoul();
        Mdestiny Mdk = new Mdestiny();
        Mpersonal Mpk = new Mpersonal();
        Msoul Msk = new Msoul();
       BirthDay bd = new BirthDay(); //spnMonth 
       YearCh jbd = new YearCh();
       BirthMonth BM = new BirthMonth();
  
 
       
   daym=bd.getBirthDay(Integer.parseInt((String)cmbDayDate.getSelectedItem()));
   System.out.println("the birth male day : "+daym);
   Maleday = daym;
      System.out.println("the birth male day : "+Maleday);

    dayfm=bd.getBirthDay(Integer.parseInt((String)cmbDayDate1.getSelectedItem()));
    Femaleday=dayfm;
    System.out.println("the birth female day : "+Femaleday);
//if( Maleday == daym && Femaleday == dayfm ){

    //=================== TRIAL CODE============================================
    
          if( Maleday == 0 || Femaleday == 1){
                txtReportArea.append ("YOUR LIFEPATH IS DEPENDANT  -1- It could be better, but it's good enough. " +Maleday +" "+ Femaleday+"\n ");
            }
            else if( Maleday == 0 || Femaleday== 2){
             txtReportArea.append ("YOUR LIFEPATH IS DEPENDANT  -2- It could be better, but it's good enough. " +Maleday +" "+ Femaleday+"\n ");   
            }
            else if( Maleday== 0 || Femaleday== 3){
            txtReportArea.append ("YOUR LIFEPATH IS -3- Pat yourself on the back for creating an opportunity. " +Maleday +" "+ Femaleday+"\n ");    
            }
            else if( Maleday== 0 || Femaleday== 4){
            txtReportArea.append ("YOUR LIFEPATH IS-4- Avert misunderstanding by calm, poise, and balance." +Maleday +" "+ Femaleday+"\n ");    
            }
            else if( Maleday== 0 || Femaleday== 5){
            txtReportArea.append ("YOUR LIFEPATH IS -5- The best year-round temperature is a warm heart and a cool head. " +Maleday +" "+ Femaleday+"\n ");    
            }
            else if( Maleday== 0 || Femaleday== 6){
            txtReportArea.append ("YOUR LIFEPATH IS -6- If you don't have time to live your life now, when will you? " +Maleday +" "+ Femaleday+"\n ");    
            }
            else if( Maleday== 0 || Femaleday== 7){
             txtReportArea.append ("YOUR LIFEPATH IS -7- You are free to invent your life. " +Maleday +" "+ Femaleday+"\n ");   
            }
            else if( Maleday== 0 || Femaleday== 8){
             txtReportArea.append (" YOUR LIFEPATH IS -8- Good sense is the master of human life." +Maleday +" "+ Femaleday+"\n ");   
            }
            else if( Maleday== 0 || Femaleday== 9){
            txtReportArea.append ("YOUR LIFEPATH IS -9- You have a potential urge and the ability for accomplishment. " +Maleday +" "+ Femaleday+"\n ");    
            }
//            else if( Maleday== 2 || Femaleday== 1){
//                txtReportArea.append ("YOUR LIFEPATH IS DEPENDANT  -1- It could be better, but it's good enough. " +Maleday +" "+ Femaleday+"\n ");
//            }
            
       
            //==================FIRST COMBINATION OF PERSONEL YEAR AND PERSONEL MONTH=====================

            
            else if( Maleday == 1 || Femaleday == 1){
                txtReportArea.append ("YOUR LIFEPATH IS DEPENDANT  -1- It could be better, but it's good enough. " +Maleday +" "+ Femaleday+"\n ");
            }
            else if( Maleday == 1 || Femaleday== 2){
             txtReportArea.append ("YOUR LIFEPATH IS DEPENDANT  -2- It could be better, but it's good enough. " +Maleday +" "+ Femaleday+"\n ");   
            }
            else if( Maleday== 1 || Femaleday== 3){
            txtReportArea.append ("YOUR LIFEPATH IS -3- Pat yourself on the back for creating an opportunity. " +Maleday +" "+ Femaleday+"\n ");    
            }
            else if( Maleday== 1 || Femaleday== 4){
            txtReportArea.append ("YOUR LIFEPATH IS-4- Avert misunderstanding by calm, poise, and balance." +Maleday +" "+ Femaleday+"\n ");    
            }
            else if( Maleday== 1 || Femaleday== 5){
            txtReportArea.append ("YOUR LIFEPATH IS -5- The best year-round temperature is a warm heart and a cool head. " +Maleday +" "+ Femaleday+"\n ");    
            }
            else if( Maleday== 1 || Femaleday== 6){
            txtReportArea.append ("YOUR LIFEPATH IS -6- If you don't have time to live your life now, when will you? " +Maleday +" "+ Femaleday+"\n ");    
            }
            else if( Maleday== 1 || Femaleday== 7){
             txtReportArea.append ("YOUR LIFEPATH IS -7- You are free to invent your life. " +Maleday +" "+ Femaleday+"\n ");   
            }
            else if( Maleday== 1 || Femaleday== 8){
             txtReportArea.append (" YOUR LIFEPATH IS -8- Good sense is the master of human life." +Maleday +" "+ Femaleday+"\n ");   
            }
            else if( Maleday== 1 || Femaleday== 9){
            txtReportArea.append ("YOUR LIFEPATH IS -9- You have a potential urge and the ability for accomplishment. " +Maleday +" "+ Femaleday+"\n ");    
            }
            else if( Maleday== 2 || Femaleday== 1){
                txtReportArea.append ("YOUR LIFEPATH IS DEPENDANT  -1- It could be better, but it's good enough. " +Maleday +" "+ Femaleday+"\n ");
            }
            
                //==================SECOND COMBINATION OF PERSONEL YEAR AND PERSONEL MONTH=====================

            
            else if( Maleday== 2 || Femaleday== 2){
             txtReportArea.append ("YOUR LIFEPATH IS DEPENDANT  -2- It could be better, but it's good enough. " +Maleday +" "+ Femaleday+"\n ");   
            }
            else if( Maleday== 2 || Femaleday== 3){
            txtReportArea.append ("YOUR LIFEPATH IS -3- Pat yourself on the back for creating an opportunity. " +Maleday +" "+ Femaleday+"\n ");    
            }
            else if( Maleday== 2 || Femaleday== 4){
            txtReportArea.append ("YOUR LIFEPATH IS-4- Avert misunderstanding by calm, poise, and balance." +Maleday +" "+ Femaleday+"\n ");    
            }
            else if( Maleday== 2 || Femaleday== 5){
            txtReportArea.append ("YOUR LIFEPATH IS -5- The best year-round temperature is a warm heart and a cool head. " +Maleday +" "+ Femaleday+"\n ");    
            }
            else if( Maleday== 2 || Femaleday== 6){
            txtReportArea.append ("YOUR LIFEPATH IS -6- If you don't have time to live your life now, when will you? " +Maleday +" "+ Femaleday+"\n ");    
            }
            else if( Maleday== 2 || Femaleday== 7){
             txtReportArea.append ("YOUR LIFEPATH IS -7- You are free to invent your life. " +Maleday +" "+ Femaleday+"\n ");   
            }
            else if( Maleday== 2 || Femaleday== 8){
             txtReportArea.append (" YOUR LIFEPATH IS -8- Good sense is the master of human life." +Maleday +" "+ Femaleday+"\n ");   
            }
            else if( Maleday== 2 || Femaleday== 9){
            txtReportArea.append ("YOUR LIFEPATH IS -9- You have a potential urge and the ability for accomplishment. " +Maleday +" "+ Femaleday+"\n ");    
            }  
            
     //==================THIRD COMBINATION OF PERSONEL YEAR AND PERSONEL MONTH=====================
          
            
             else if( Maleday== 3 || Femaleday== 1){
                txtReportArea.append ("YOUR LIFEPATH IS DEPENDANT  -1- It could be better, but it's good enough. " +Maleday +" "+ Femaleday+"\n ");
            }
            else if( Maleday== 3 || Femaleday== 2){
             txtReportArea.append ("YOUR LIFEPATH IS DEPENDANT  -2- It could be better, but it's good enough. " +Maleday +" "+ Femaleday+"\n ");   
            }
            else if( Maleday== 3 || Femaleday== 3){
            txtReportArea.append ("YOUR LIFEPATH IS -3- Pat yourself on the back for creating an opportunity. " +Maleday +" "+ Femaleday+"\n ");    
            }
            else if( Maleday== 3 || Femaleday== 4){
            txtReportArea.append ("YOUR LIFEPATH IS-4- Avert misunderstanding by calm, poise, and balance." +Maleday +" "+ Femaleday+"\n ");    
            }
            else if( Maleday== 3 || Femaleday== 5){
            txtReportArea.append ("YOUR LIFEPATH IS -5- The best year-round temperature is a warm heart and a cool head. " +Maleday +" "+ Femaleday+"\n ");    
            }
            else if( Maleday== 3 || Femaleday== 6){
            txtReportArea.append ("YOUR LIFEPATH IS -6- If you don't have time to live your life now, when will you? " +Maleday +" "+ Femaleday+"\n ");    
            }
            else if( Maleday== 3 || Femaleday== 7){
             txtReportArea.append ("YOUR LIFEPATH IS -7- You are free to invent your life. " +Maleday +" "+ Femaleday+"\n ");   
            }
            else if( Maleday== 3 || Femaleday== 8){
             txtReportArea.append (" YOUR LIFEPATH IS -8- Good sense is the master of human life." +Maleday +" "+ Femaleday+"\n ");   
            }
            else if( Maleday== 3 || Femaleday== 9){
            txtReportArea.append ("YOUR LIFEPATH IS -9- You have a potential urge and the ability for accomplishment. " +Maleday +" "+ Femaleday+"\n ");    
            }  
            
                //==================FOUTH COMBINATION OF PERSONEL YEAR AND PERSONEL MONTH=====================

            
             else if( Maleday== 4 || Femaleday== 1){
                txtReportArea.append ("YOUR LIFEPATH IS DEPENDANT  -1- It could be better, but it's good enough. " +Maleday +" "+ Femaleday+"\n ");
            }
            else if( Maleday== 4 || Femaleday== 2){
             txtReportArea.append ("YOUR LIFEPATH IS DEPENDANT  -2- It could be better, but it's good enough. " +Maleday +" "+ Femaleday+"\n ");   
            }
            else if( Maleday== 4 || Femaleday== 3){
            txtReportArea.append ("YOUR LIFEPATH IS -3- Pat yourself on the back for creating an opportunity. " +Maleday +" "+ Femaleday+"\n ");    
            }
            else if( Maleday== 4 || Femaleday== 4){
            txtReportArea.append ("YOUR LIFEPATH IS-4- Avert misunderstanding by calm, poise, and balance." +Maleday +" "+ Femaleday+"\n ");    
            }
            else if( Maleday== 4 || Femaleday== 5){
            txtReportArea.append ("YOUR LIFEPATH IS -5- The best year-round temperature is a warm heart and a cool head. " +Maleday +" "+ Femaleday+"\n ");    
            }
            else if( Maleday== 4 || Femaleday== 6){
            txtReportArea.append ("YOUR LIFEPATH IS -6- If you don't have time to live your life now, when will you? " +Maleday +" "+ Femaleday+"\n ");    
            }
            else if( Maleday== 4 || Femaleday== 7){
             txtReportArea.append ("YOUR LIFEPATH IS -7- You are free to invent your life. " +Maleday +" "+ Femaleday+"\n ");   
            }
            else if( Maleday== 4 || Femaleday== 8){
             txtReportArea.append (" YOUR LIFEPATH IS -8- Good sense is the master of human life." +Maleday +" "+ Femaleday+"\n ");   
            }
            else if( Maleday== 4 || Femaleday== 9){
            txtReportArea.append ("YOUR LIFEPATH IS -9- You have a potential urge and the ability for accomplishment. " +Maleday +" "+ Femaleday+"\n ");    
            }  
            
     //==================FIFTT COMBINATION OF PERSONEL YEAR AND PERSONEL MONTH=====================
           
             else if( Maleday== 5 || Femaleday== 1){
                txtReportArea.append ("YOUR LIFEPATH IS DEPENDANT  -1- It could be better, but it's good enough. " +Maleday +" "+ Femaleday+"\n ");
            }
            else if( Maleday== 5 || Femaleday== 2){
             txtReportArea.append ("YOUR LIFEPATH IS DEPENDANT  -2- It could be better, but it's good enough. " +Maleday +" "+ Femaleday+"\n ");   
            }
            else if( Maleday== 5 || Femaleday== 3){
            txtReportArea.append ("YOUR LIFEPATH IS -3- Pat yourself on the back for creating an opportunity. " +Maleday +" "+ Femaleday+"\n ");    
            }
            else if( Maleday== 5 || Femaleday== 4){
            txtReportArea.append ("YOUR LIFEPATH IS-4- Avert misunderstanding by calm, poise, and balance." +Maleday +" "+ Femaleday+"\n ");    
            }
            else if( Maleday== 5 || Femaleday== 5){
            txtReportArea.append ("YOUR LIFEPATH IS -5- The best year-round temperature is a warm heart and a cool head. " +Maleday +" "+ Femaleday+"\n ");    
            }
            else if( Maleday== 5 || Femaleday== 6){
            txtReportArea.append ("YOUR LIFEPATH IS -6- If you don't have time to live your life now, when will you? " +Maleday +" "+ Femaleday+"\n ");    
            }
            else if( Maleday== 5 || Femaleday== 7){
             txtReportArea.append ("YOUR LIFEPATH IS -7- You are free to invent your life. " +Maleday +" "+ Femaleday+"\n ");   
            }
            else if( Maleday== 5 || Femaleday== 8){
             txtReportArea.append (" YOUR LIFEPATH IS -8- Good sense is the master of human life." +Maleday +" "+ Femaleday+"\n ");   
            }
            else if( Maleday== 5 || Femaleday== 9){
            txtReportArea.append ("YOUR LIFEPATH IS -9- You have a potential urge and the ability for accomplishment. " +Maleday +" "+ Femaleday+"\n ");    
            }  
            
     //==================SITH COMBINATION OF PERSONEL YEAR AND PERSONEL MONTH=====================
           
             else if( Maleday== 6 || Femaleday== 1){
                txtReportArea.append ("YOUR LIFEPATH IS DEPENDANT  -1- It could be better, but it's good enough. " +Maleday +" "+ Femaleday+"\n ");
            }
            else if( Maleday== 6 || Femaleday== 2){
             txtReportArea.append ("YOUR LIFEPATH IS DEPENDANT  -2- It could be better, but it's good enough. " +Maleday +" "+ Femaleday+"\n ");   
            }
            else if( Maleday== 6 || Femaleday== 3){
            txtReportArea.append ("YOUR LIFEPATH IS -3- Pat yourself on the back for creating an opportunity. " +Maleday +" "+ Femaleday+"\n ");    
            }
            else if( Maleday== 6 || Femaleday== 4){
            txtReportArea.append ("YOUR LIFEPATH IS-4- Avert misunderstanding by calm, poise, and balance." +Maleday +" "+ Femaleday+"\n ");    
            }
            else if( Maleday== 6 || Femaleday== 5){
            txtReportArea.append ("YOUR LIFEPATH IS -5- The best year-round temperature is a warm heart and a cool head. " +Maleday +" "+ Femaleday+"\n ");    
            }
            else if( Maleday== 6 || Femaleday== 6){
            txtReportArea.append ("YOUR LIFEPATH IS -6- If you don't have time to live your life now, when will you? " +Maleday +" "+ Femaleday+"\n ");    
            }
            else if( Maleday== 6 || Femaleday== 7){
             txtReportArea.append ("YOUR LIFEPATH IS -7- You are free to invent your life. " +Maleday +" "+ Femaleday+"\n ");   
            }
            else if( Maleday== 6 || Femaleday== 8){
             txtReportArea.append (" YOUR LIFEPATH IS -8- Good sense is the master of human life." +Maleday +" "+ Femaleday+"\n ");   
            }
            else if( Maleday== 6 || Femaleday== 9){
            txtReportArea.append ("YOUR LIFEPATH IS -9- You have a potential urge and the ability for accomplishment. " +Maleday +" "+ Femaleday+"\n ");    
            }  
            
    //==================SEVENTH COMBINATION OF PERSONEL YEAR AND PERSONEL MONTH=====================
            
             else if( Maleday== 7 || Femaleday== 1){
                txtReportArea.append ("YOUR LIFEPATH IS DEPENDANT  -1- It could be better, but it's good enough. " +Maleday +" "+ Femaleday+"\n ");
            }
            else if( Maleday== 7 || Femaleday== 2){
             txtReportArea.append ("YOUR LIFEPATH IS DEPENDANT  -2- It could be better, but it's good enough. " +Maleday +" "+ Femaleday+"\n ");   
            }
            else if( Maleday== 7 || Femaleday== 3){
            txtReportArea.append ("YOUR LIFEPATH IS -3- Pat yourself on the back for creating an opportunity. " +Maleday +" "+ Femaleday+"\n ");    
            }
            else if( Maleday== 7 || Femaleday== 4){
            txtReportArea.append ("YOUR LIFEPATH IS-4- Avert misunderstanding by calm, poise, and balance." +Maleday +" "+ Femaleday+"\n ");    
            }
            else if( Maleday== 7 || Femaleday== 5){
            txtReportArea.append ("YOUR LIFEPATH IS -5- The best year-round temperature is a warm heart and a cool head. " +Maleday +" "+ Femaleday+"\n ");    
            }
            else if( Maleday== 7 || Femaleday== 6){
            txtReportArea.append ("YOUR LIFEPATH IS -6- If you don't have time to live your life now, when will you? " +Maleday +" "+ Femaleday+"\n ");    
            }
            else if( Maleday== 7 || Femaleday== 7){
             txtReportArea.append ("YOUR LIFEPATH IS -7- You are free to invent your life. " +Maleday +" "+ Femaleday+"\n ");   
            }
            else if( Maleday== 7 || Femaleday== 8){
             txtReportArea.append (" YOUR LIFEPATH IS -8- Good sense is the master of human life." +Maleday +" "+ Femaleday+"\n ");   
            }
            else if( Maleday== 7 || Femaleday== 9){
            txtReportArea.append ("YOUR LIFEPATH IS -9- You have a potential urge and the ability for accomplishment. " +Maleday +" "+ Femaleday+"\n ");    
            }  
            
    //==================EIEGTH COMBINATION OF PERSONEL YEAR AND PERSONEL MONTH=====================
            
             else if( Maleday== 8 || Femaleday== 1){
                txtReportArea.append ("YOUR LIFEPATH IS DEPENDANT  -1- It could be better, but it's good enough. " +Maleday +" "+ Femaleday+"\n ");
            }
            else if( Maleday== 8 || Femaleday== 2){
             txtReportArea.append ("YOUR LIFEPATH IS DEPENDANT  -2- It could be better, but it's good enough. " +Maleday +" "+ Femaleday+"\n ");   
            }
            else if( Maleday== 8 || Femaleday== 3){
            txtReportArea.append ("YOUR LIFEPATH IS -3- Pat yourself on the back for creating an opportunity. " +Maleday +" "+ Femaleday+"\n ");    
            }
            else if( Maleday== 8 || Femaleday== 4){
            txtReportArea.append ("YOUR LIFEPATH IS-4- Avert misunderstanding by calm, poise, and balance." +Maleday +" "+ Femaleday+"\n ");    
            }
            else if( Maleday== 8 || Femaleday== 5){
            txtReportArea.append ("YOUR LIFEPATH IS -5- The best year-round temperature is a warm heart and a cool head. " +Maleday +" "+ Femaleday+"\n ");    
            }
            else if( Maleday== 8 || Femaleday== 6){
            txtReportArea.append ("YOUR LIFEPATH IS -6- If you don't have time to live your life now, when will you? " +Maleday +" "+ Femaleday+"\n ");    
            }
            else if( Maleday== 8 || Femaleday== 7){
             txtReportArea.append ("YOUR LIFEPATH IS -7- You are free to invent your life. " +Maleday +" "+ Femaleday+"\n ");   
            }
            else if( Maleday== 8 || Femaleday== 8){
             txtReportArea.append (" YOUR LIFEPATH IS -8- Good sense is the master of human life." +Maleday +" "+ Femaleday+"\n ");   
            }
            else if( Maleday  == 8 || Femaleday==9){
            txtReportArea.append ("YOUR LIFEPATH IS -9- You have a potential urge and the ability for accomplishment. " +Maleday +" "+ Femaleday+"\n ");    
            }  
            
    //==================NINTH COMBINATION OF PERSONEL YEAR AND PERSONEL MONTH=====================
            
             else if( Maleday== 9 || Femaleday== 1){
                txtReportArea.append ("YOUR LIFEPATH IS DEPENDANT  -1- It could be better, but it's good enough. " + Maleday +" "+  Femaleday+"\n ");
            }
            else if( Maleday== 9 || Femaleday== 2){
             txtReportArea.append ("YOUR LIFEPATH IS DEPENDANT  -2- It could be better, but it's good enough. " +Maleday +" "+ Femaleday+"\n ");   
            }
            else if( Maleday== 9 || Femaleday== 3){
            txtReportArea.append ("YOUR LIFEPATH IS -3- Pat yourself on the back for creating an opportunity. " +Maleday +" "+ Femaleday+"\n ");    
            }
            else if( Maleday== 9 || Femaleday== 4){
            txtReportArea.append ("YOUR LIFEPATH IS-4- Avert misunderstanding by calm, poise, and balance." +Maleday +" "+ Femaleday+"\n ");    
            }
            else if( Maleday== 9 || Femaleday== 5){
            txtReportArea.append ("YOUR LIFEPATH IS -5- The best year-round temperature is a warm heart and a cool head. " +Maleday +" "+ Femaleday+"\n ");    
            }
            else if( Maleday== 9 || Femaleday== 6){
            txtReportArea.append ("YOUR LIFEPATH IS -6- If you don't have time to live your life now, when will you? " +Maleday +" "+ Femaleday+"\n ");    
            }
            else if( Maleday== 9 || Femaleday== 7){
             txtReportArea.append ("YOUR LIFEPATH IS -7- You are free to invent your life. " +Maleday +" "+ Femaleday+"\n ");   
            }
            else if( Maleday== 9 || Femaleday== 8){
             txtReportArea.append (" YOUR LIFEPATH IS -8- Good sense is the master of human life." +Maleday +" "+ Femaleday+"\n ");   
            }
            else if( Maleday== 9 || Femaleday== 9){
            txtReportArea.append ("YOUR LIFEPATH IS -9- You have a potential urge and the ability for accomplishment. " +Maleday +" "+ Femaleday+"\n ");    
             
//        }
         }
       
Destiny = Integer.parseInt(String.valueOf(cdk.getCurrentPowerName(txtCurrentName.getText())))+Integer.parseInt(String.valueOf(Mdk.getMotherPowerName(txtMothersName.getText())));
        destinyNumber =Destiny;
        
                        if( destinyNumber == 11 ) {

                   txtReportArea.append("YOUR LIFEPATH IS MASTER LIFE -11- you possess some spiritual powers " + destinyNumber +"\n ");
                 }

                 else if( destinyNumber == 22 ){
                    txtReportArea.append("YOUR LIFEPATH IS SECOND MASTER LIFE -22- you possess some spiritual powers " + destinyNumber +"\n "); 
                 }

                  else if( destinyNumber == 33  ){
                    txtReportArea.append("YOUR LIFEPATH IS THIRD MASTER LIFE -33- you possess some spiritual powers " + destinyNumber +"\n "); 
                 }
 
                 else if(destinyNumber > 9 && destinyNumber != 11 || destinyNumber != 22 || destinyNumber != 33){

                 destinyNumber = (( Destiny %9==0) ? 9 : Destiny %9);

                      if(destinyNumber == 1 ){

                     txtReportArea.append("YOUR LIFEPATH IS INDEPENDANT LIFE -1- You will find a thing. It may be important " + destinyNumber +"\n ");
                }

                else if (destinyNumber == 2 ){
                 txtReportArea.append ("YOUR LIFEPATH IS DEPENDANT  -2- It could be better, but it's good enough. " + destinyNumber +"\n ");
                }
                else if(destinyNumber == 3 ){
                     txtReportArea.append ("YOUR LIFEPATH IS -3- Pat yourself on the back for creating an opportunity. " + destinyNumber +"\n ");
                }
                else if(destinyNumber == 4 ){
                    
                  txtReportArea.append ("YOUR LIFEPATH IS-4- Avert misunderstanding by calm, poise, and balance." + destinyNumber +"\n ");
                }
               else if( destinyNumber == 5 ){
                   txtReportArea.append ("YOUR LIFEPATH IS -5- The best year-round temperature is a warm heart and a cool head. " + destinyNumber +"\n ");
               }
               else if( destinyNumber == 6 ){
                    txtReportArea.append ("YOUR LIFEPATH IS -6- If you don't have time to live your life now, when will you? " + destinyNumber +"\n ");
               }
               else if( destinyNumber == 7 ){
                  txtReportArea.append ("YOUR LIFEPATH IS -7- You are free to invent your life. " + destinyNumber +"\n ");
                 }
               else if( destinyNumber == 8 ){
                  txtReportArea.append (" YOUR LIFEPATH IS -8- Good sense is the master of human life." + destinyNumber +"\n ");
                }
               else if( destinyNumber == 9 ){
                      txtReportArea.append ("YOUR LIFEPATH IS -9- You have a potential urge and the ability for accomplishment. " + destinyNumber +"\n ");

                }
                 }
                        
                        
                        
   Personal = Integer.parseInt(String.valueOf(k.getCurrentPersonality(txtCurrentName.getText())))+Integer.parseInt(String.valueOf(Mpk.getMothertPersonality(txtMothersName.getText())));
        personalNumber =Personal;
        
                        if( Personal == 11 ) {

                    txtReportArea.append("YOUR LIFEPATH IS MASTER LIFE -11- you possess some spiritual powers " + personalNumber +"\n ");
                 }

                 else if( Personal == 22  ){
                     txtReportArea.append("YOUR LIFEPATH IS SECOND MASTER LIFE -22- you possess some spiritual powers " + personalNumber +"\n "); 
                 }

                  else if( Personal == 33   ){
                     txtReportArea.append("YOUR LIFEPATH IS THIRD MASTER LIFE -33- you possess some spiritual powers " + personalNumber +"\n "); 
                 }
 
                 else if(personalNumber > 9 && personalNumber != 11 || personalNumber != 22 || personalNumber != 33){

                 personalNumber = (( Personal %9==0) ? 9 : Personal %9);

                      if(personalNumber == 1 ){

                    txtReportArea.append("YOUR LIFEPATH IS INDEPENDANT LIFE -1- You will find a thing. It may be important " +personalNumber +"\n ");
                }

                else if (personalNumber == 2 ){
                     txtReportArea.append ("YOUR LIFEPATH IS DEPENDANT  -2- It could be better, but it's good enough. " + personalNumber +"\n ");
                }
                else if(personalNumber == 3 ){
                     txtReportArea.append ("YOUR LIFEPATH IS -3- Pat yourself on the back for creating an opportunity. " +personalNumber +"\n ");
                }
                else if(personalNumber == 4 ){
                    
                  txtReportArea.append ("YOUR LIFEPATH IS-4- Avert misunderstanding by calm, poise, and balance. " + personalNumber +"\n ");
                }
               else if( personalNumber == 5 ){
                  txtReportArea.append ("YOUR LIFEPATH IS -5- The best year-round temperature is a warm heart and a cool head. "+ personalNumber +"\n ");
               }
               else if( personalNumber == 6 ){
                   txtReportArea.append ("YOUR LIFEPATH IS -6- If you don't have time to live your life now, when will you? " + personalNumber +"\n ");
               }
               else if( personalNumber == 7 ){
                    txtReportArea.append ("YOUR LIFEPATH IS -7- You are free to invent your life. "+ personalNumber +"\n ");
                 }
               else if( personalNumber == 8 ){
                  txtReportArea.append (" YOUR LIFEPATH IS -8- Good sense is the master of human life. "+ personalNumber +"\n ");
                }
               else if( personalNumber == 9 ){
                     txtReportArea.append ("YOUR LIFEPATH IS -9- You have a potential urge and the ability for accomplishment. "+ personalNumber +"\n ");

                }                      
                 }
//        
                        
                      
        Soul = Integer.parseInt(String.valueOf(csk.getCurrentSoul(txtCurrentName.getText())))+Integer.parseInt(String.valueOf(Msk.getMotherSoul(txtMothersName.getText())));
        soulNumber =Soul;              
        
      if( soulNumber == 11 ) {

                   txtReportArea.append("YOUR LIFEPATH IS MASTER LIFE -11- you possess some spiritual powers " + soulNumber +"\n ");
                 }

                 else if( soulNumber == 22   ){
                     txtReportArea.append("YOUR LIFEPATH IS SECOND MASTER LIFE -22- you possess some spiritual powers " + soulNumber +"\n "); 
                 }

                  else if( soulNumber == 33   ){
                     txtReportArea.append("YOUR LIFEPATH IS THIRD MASTER LIFE -33- you possess some spiritual powers " + soulNumber +"\n "); 
                 }
 
                 else if(soulNumber > 9 && soulNumber != 11 || soulNumber != 22 || soulNumber != 33){

                 soulNumber = (( soulNumber %9==0) ? 9 : soulNumber %9);

                      if(soulNumber == 1 ){

                    txtReportArea.append("YOUR LIFEPATH IS INDEPENDANT LIFE -1- You will find a thing. It may be important" +soulNumber +"\n ");
                }

                else if (soulNumber == 2 ){
                     txtReportArea.append ("YOUR LIFEPATH IS DEPENDANT  -2- It could be better, but it's good enough." + soulNumber +"\n ");
                }
                else if(soulNumber == 3 ){
                    txtReportArea.append ("YOUR LIFEPATH IS -3- Pat yourself on the back for creating an opportunity." +soulNumber +"\n ");
                }
                else if(soulNumber == 4 ){
                    
                   txtReportArea.append ("YOUR LIFEPATH IS-4- Avert misunderstanding by calm, poise, and balance."+ soulNumber +"\n ");
                }
               else if( soulNumber == 5 ){
                    txtReportArea.append ("YOUR LIFEPATH IS -5- The best year-round temperature is a warm heart and a cool head."+ soulNumber +"\n ");
               }
               else if( soulNumber == 6 ){
                   txtReportArea.append ("YOUR LIFEPATH IS -6- If you don't have time to live your life now, when will you?" + soulNumber +"\n ");
               }
               else if( soulNumber == 7 ){
                    txtReportArea.append ("YOUR LIFEPATH IS -7- You are free to invent your life."+ soulNumber +"\n ");
                 }
               else if( soulNumber == 8 ){
                  txtReportArea.append (" YOUR LIFEPATH IS -8- Good sense is the master of human life."+ soulNumber +"\n ");
                }
               else if( soulNumber == 9 ){
                      txtReportArea.append("YOUR LIFEPATH IS -9- You have a potential urge and the ability for accomplishment."+ soulNumber +"\n ");

                }                     
                 }  

 txtCurrentName.setText("");
        txtMothersName.setText("");
        cmbDayDate.setToolTipText("");
        cmbMonthDate.setToolTipText("");
        jYearChooser1.setToolTipText("");
        jYearChooser2.setToolTipText("");

     
    }//GEN-LAST:event_jButton6ActionPerformed

    private void cmbMonthDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbMonthDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbMonthDateActionPerformed

    private void cmbMonthDate1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbMonthDate1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbMonthDate1ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        HomeWindow pers = new HomeWindow();
//         pers.pack();
//        pers.setLocationRelativeTo(pers);
//        pers.setExtendedState(JFrame.MAXIMIZED_BOTH);
        pers.setVisible(true);
         this.dispose();
    }//GEN-LAST:event_jButton7ActionPerformed

    private void txtCurrentNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCurrentNameKeyTyped
        // TODO add your handling code here:
        txtReportArea.append("");
               try{
                        CharactersOnly.CharactersOnly(evt);
                    }catch(NumberFormatException e){
                        JOptionPane.showConfirmDialog(null, "Please Enter Only Character");
                    }
               
    }//GEN-LAST:event_txtCurrentNameKeyTyped

    private void txtMothersNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMothersNameKeyTyped
        // TODO add your handling code here:
        txtReportArea.setText("");
               try{
                        CharactersOnly.CharactersOnly(evt);
                    }catch(NumberFormatException e){
                        JOptionPane.showConfirmDialog(null, "Please Enter Only Character");
                    }
    }//GEN-LAST:event_txtMothersNameKeyTyped

    private void txtCurrentName1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCurrentName1KeyTyped
        // TODO add your handling code here:
               try{
                        CharactersOnly.CharactersOnly(evt);
                    }catch(NumberFormatException e){
                        JOptionPane.showConfirmDialog(null, "Please Enter Only Character");
                    }
    }//GEN-LAST:event_txtCurrentName1KeyTyped

    private void txtMothersName1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMothersName1KeyTyped
        // TODO add your handling code here:
               try{
                        CharactersOnly.CharactersOnly(evt);
                    }catch(NumberFormatException e){
                        JOptionPane.showConfirmDialog(null, "Please Enter Only Character");
                    }
    }//GEN-LAST:event_txtMothersName1KeyTyped

    private void jCheckBoxMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxMenuItem2ActionPerformed
        // TODO add your handling code here:
        PersonalDaitals pers = new PersonalDaitals();
        pers.pack();
        pers.setLocationRelativeTo(pers);
        pers.setExtendedState(JFrame.MAXIMIZED_BOTH);
        pers.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jCheckBoxMenuItem2ActionPerformed

    private void jCheckBoxMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxMenuItem7ActionPerformed
        System.exit(WIDTH);
    }//GEN-LAST:event_jCheckBoxMenuItem7ActionPerformed

    private void jCheckBoxMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxMenuItem4ActionPerformed
        //================Print stuffss goes here==============
    }//GEN-LAST:event_jCheckBoxMenuItem4ActionPerformed

    private void jCheckBoxMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxMenuItem5ActionPerformed
        //================Copy stuffss goes here==============
    }//GEN-LAST:event_jCheckBoxMenuItem5ActionPerformed

    private void jCheckBoxMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxMenuItem6ActionPerformed
        //======
    }//GEN-LAST:event_jCheckBoxMenuItem6ActionPerformed

    private void jCheckBoxMenuItem8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxMenuItem8ActionPerformed
        // TODO add your handling code here:
        // ===============Exit===================:
Child_Event youExit = new Child_Event();
        try {
            youExit.iExitsystem();
        } catch (NumberFormatException e) {
            JOptionPane.showConfirmDialog(null, "Billing system error");
        }
    }//GEN-LAST:event_jCheckBoxMenuItem8ActionPerformed

    private void jCheckBoxMenuItem10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxMenuItem10ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBoxMenuItem10ActionPerformed

    private void jCheckBoxMenuItem11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxMenuItem11ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBoxMenuItem11ActionPerformed

    private void jMenu3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu3ActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jMenu3ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        AboutUs aboutus = new AboutUs();
        aboutus.pack();
        aboutus.setVisible(true);
//        aboutus.dispose();
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void txtCurrentNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCurrentNameActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_txtCurrentNameActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DetailWindows.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
        DetailWindows pers = new DetailWindows();
        pers.pack();
        pers.setLocationRelativeTo(pers);
        pers.setExtendedState(JFrame.MAXIMIZED_BOTH);
                new DetailWindows().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox cmbDayDate;
    private javax.swing.JComboBox cmbDayDate1;
    private javax.swing.JComboBox cmbMonthDate;
    private javax.swing.JComboBox cmbMonthDate1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem10;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem11;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem2;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem4;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem5;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem6;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem7;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem8;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JSeparator jSeparator7;
    private javax.swing.JSeparator jSeparator8;
    private com.toedter.calendar.JYearChooser jYearChooser1;
    private com.toedter.calendar.JYearChooser jYearChooser2;
    private javax.swing.JTextField txtCurrentName;
    private javax.swing.JTextField txtCurrentName1;
    private javax.swing.JTextField txtMothersName;
    private javax.swing.JTextField txtMothersName1;
    private javax.swing.JTextArea txtReportArea;
    // End of variables declaration//GEN-END:variables

}
